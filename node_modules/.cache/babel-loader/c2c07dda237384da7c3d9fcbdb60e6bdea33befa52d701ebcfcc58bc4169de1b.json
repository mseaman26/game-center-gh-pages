{"ast":null,"code":"import Auth from '../auth';\n\n/******************     Login \t*******************/\nexport const loginApi = async userData => {\n  try {\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to log in');\n    }\n    const data = await response.json();\n    console.log(data, \"response\");\n    return data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\n/********    Updates Current User Password \t***************/\nexport const updatePassword = async userData => {\n  try {\n    const response = await fetch('/api/users/me/password', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${Auth.getToken()}`\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update password');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error updating password:', error);\n    throw error;\n  }\n};\n\n/********    Updates Current User Info \t***************/\nexport const updateUser = async userData => {\n  try {\n    const response = await fetch('/api/users/me', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${Auth.getToken()}`\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update user');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\n\n/***********     Display All Users \t***************/\nexport const showAllUsers = async () => {\n  try {\n    const response = await fetch('/api/users', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${Auth.getToken()}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to retrieve users');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error retrieving users:', error);\n    throw error;\n  }\n};\n\n/*************     Creates A New User  ***************/\nexport const signupApi = async userData => {\n  try {\n    const response = await fetch('/api/users/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${Auth.getToken()}`\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create user');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error creating user:', error);\n    throw error;\n  }\n};\n\n/********     Updates A User\t***************/\nexport const updateUserInfo = async userData => {\n  try {\n    const response = await fetch(`/api/users/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${Auth.getToken()}`\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update user');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n};\n\n/********    Updates A User Password \t***************/\nexport const updateUserPassword = async userData => {\n  try {\n    const response = await fetch(`/api/users/password`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${Auth.getToken()}`\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to update user password');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error updating user password:', error);\n    throw error;\n  }\n};\n\n/***********   Deletes A User Password \t***************/\nexport const deleteUser = async id => {\n  try {\n    const response = await fetch(`/api/users/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${Auth.getToken()}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to delete user');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["Auth","loginApi","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","updatePassword","authorization","getToken","updateUser","showAllUsers","signupApi","updateUserInfo","updateUserPassword","deleteUser","id"],"sources":["/Users/michaelseaman/Desktop/programming_projects/Collaborations/Game-Center/client/src/utils/api/userApi.js"],"sourcesContent":["import Auth from '../auth';\n\n/******************     Login \t*******************/\nexport const loginApi =  async (userData) => {\n\ttry {\n\t\tconst response = await fetch('/api/users/login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData),\n\t\t});\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to log in');\n\t\t}\n\t\tconst data = await response.json();\n\t\tconsole.log(data, \"response\")\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error logging in:', error);\n\t\tthrow error;\n\t}\n};\n\n\n/********    Updates Current User Password \t***************/\nexport const updatePassword = async (userData) => {\n\ttry {\n\t\tconst response = await fetch('/api/users/me/password', {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${Auth.getToken()}`\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData),\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to update password');\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error updating password:', error);\n\t\tthrow error;\n\t}\n};\n\n\n/********    Updates Current User Info \t***************/\nexport const updateUser = async (userData) => {\n\ttry {\n\t\tconst response = await fetch('/api/users/me', {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${Auth.getToken()}`\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData),\n\t\t});\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to update user');\n\t\t}\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error updating user:', error);\n\t\tthrow error;\n\t}\n};\n\n/***********     Display All Users \t***************/\nexport const showAllUsers = async () => {\n\ttry {\n\t\tconst response = await fetch('/api/users', {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${Auth.getToken()}`\n\t\t\t},\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to retrieve users');\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error retrieving users:', error);\n\t\tthrow error;\n\t}\n};\n\n\n/*************     Creates A New User  ***************/\nexport const signupApi = async (userData) => {\n\ttry {\n\t\tconst response = await fetch('/api/users/signup', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${Auth.getToken()}`\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData),\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to create user');\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error creating user:', error);\n\t\tthrow error;\n\t}\n};\n\n/********     Updates A User\t***************/\nexport const updateUserInfo = async (userData) => {\n\ttry {\n\t\tconst response = await fetch(`/api/users/`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${Auth.getToken()}`\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData),\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to update user');\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error updating user:', error);\n\t\tthrow error;\n\t}\n};\n\n/********    Updates A User Password \t***************/\nexport const updateUserPassword = async (userData) => {\n\ttry {\n\t\tconst response = await fetch(`/api/users/password`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${Auth.getToken()}`\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData),\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to update user password');\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error updating user password:', error);\n\t\tthrow error;\n\t}\n};\n\n/***********   Deletes A User Password \t***************/\nexport const deleteUser = async (id) => {\n\ttry {\n\t\tconst response = await fetch(`/api/users/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${Auth.getToken()}`\n\t\t\t},\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error('Failed to delete user');\n\t\t}\n\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error('Error deleting user:', error);\n\t\tthrow error;\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}